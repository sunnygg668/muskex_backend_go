// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: mproto/user_man.proto

package mproto

import (
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	model "muskex/gen/mproto/model"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubmitRechargeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 快捷支付返回跳转地址，
	RedirectUrl string `protobuf:"bytes,1,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	// 银行卡支付返回提示信息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SubmitRechargeResponse) Reset() {
	*x = SubmitRechargeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitRechargeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRechargeResponse) ProtoMessage() {}

func (x *SubmitRechargeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRechargeResponse.ProtoReflect.Descriptor instead.
func (*SubmitRechargeResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitRechargeResponse) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *SubmitRechargeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SubmitRechargeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodId int32   `protobuf:"varint,1,opt,name=methodId,proto3" json:"methodId,omitempty"`
	Name     string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Amount   float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SubmitRechargeRequest) Reset() {
	*x = SubmitRechargeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitRechargeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRechargeRequest) ProtoMessage() {}

func (x *SubmitRechargeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRechargeRequest.ProtoReflect.Descriptor instead.
func (*SubmitRechargeRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitRechargeRequest) GetMethodId() int32 {
	if x != nil {
		return x.MethodId
	}
	return 0
}

func (x *SubmitRechargeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubmitRechargeRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type RechargeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.FinancialRecharge `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RechargeListResponse) Reset() {
	*x = RechargeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RechargeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeListResponse) ProtoMessage() {}

func (x *RechargeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeListResponse.ProtoReflect.Descriptor instead.
func (*RechargeListResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{2}
}

func (x *RechargeListResponse) GetList() []*model.FinancialRecharge {
	if x != nil {
		return x.List
	}
	return nil
}

type QuickPayMethodListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainCoinPrice    float32                         `protobuf:"fixed32,1,opt,name=mainCoinPrice,proto3" json:"mainCoinPrice,omitempty"`
	RechargeMoneyTip string                          `protobuf:"bytes,2,opt,name=rechargeMoneyTip,proto3" json:"rechargeMoneyTip,omitempty"`
	MethodList       []*model.FinancialPaymentMethod `protobuf:"bytes,3,rep,name=MethodList,proto3" json:"MethodList,omitempty"`
}

func (x *QuickPayMethodListResponse) Reset() {
	*x = QuickPayMethodListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickPayMethodListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickPayMethodListResponse) ProtoMessage() {}

func (x *QuickPayMethodListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickPayMethodListResponse.ProtoReflect.Descriptor instead.
func (*QuickPayMethodListResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{3}
}

func (x *QuickPayMethodListResponse) GetMainCoinPrice() float32 {
	if x != nil {
		return x.MainCoinPrice
	}
	return 0
}

func (x *QuickPayMethodListResponse) GetRechargeMoneyTip() string {
	if x != nil {
		return x.RechargeMoneyTip
	}
	return ""
}

func (x *QuickPayMethodListResponse) GetMethodList() []*model.FinancialPaymentMethod {
	if x != nil {
		return x.MethodList
	}
	return nil
}

type IdCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Idcard string `protobuf:"bytes,2,opt,name=idcard,proto3" json:"idcard,omitempty"`
}

func (x *IdCardInfo) Reset() {
	*x = IdCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdCardInfo) ProtoMessage() {}

func (x *IdCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdCardInfo.ProtoReflect.Descriptor instead.
func (*IdCardInfo) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{4}
}

func (x *IdCardInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IdCardInfo) GetIdcard() string {
	if x != nil {
		return x.Idcard
	}
	return ""
}

type BuyContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 币名 如 BTC
	ContractName string `protobuf:"bytes,1,opt,name=ContractName,proto3" json:"ContractName,omitempty"`
	Num          uint32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *BuyContractRequest) Reset() {
	*x = BuyContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyContractRequest) ProtoMessage() {}

func (x *BuyContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyContractRequest.ProtoReflect.Descriptor instead.
func (*BuyContractRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{5}
}

func (x *BuyContractRequest) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *BuyContractRequest) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type BuyManRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Num          int64  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	FundPassword string `protobuf:"bytes,3,opt,name=fundPassword,proto3" json:"fundPassword,omitempty"`
}

func (x *BuyManRequest) Reset() {
	*x = BuyManRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyManRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyManRequest) ProtoMessage() {}

func (x *BuyManRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyManRequest.ProtoReflect.Descriptor instead.
func (*BuyManRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{6}
}

func (x *BuyManRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BuyManRequest) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *BuyManRequest) GetFundPassword() string {
	if x != nil {
		return x.FundPassword
	}
	return ""
}

type TradeContractOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.TradeContractOrder `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TradeContractOrderListResponse) Reset() {
	*x = TradeContractOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeContractOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeContractOrderListResponse) ProtoMessage() {}

func (x *TradeContractOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeContractOrderListResponse.ProtoReflect.Descriptor instead.
func (*TradeContractOrderListResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{7}
}

func (x *TradeContractOrderListResponse) GetList() []*model.TradeContractOrder {
	if x != nil {
		return x.List
	}
	return nil
}

type LecturerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.Lecturer `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *LecturerListResponse) Reset() {
	*x = LecturerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LecturerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LecturerListResponse) ProtoMessage() {}

func (x *LecturerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LecturerListResponse.ProtoReflect.Descriptor instead.
func (*LecturerListResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{8}
}

func (x *LecturerListResponse) GetList() []*model.Lecturer {
	if x != nil {
		return x.List
	}
	return nil
}

type CommissionChangeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.UserCommissionChange `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CommissionChangeListResponse) Reset() {
	*x = CommissionChangeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionChangeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionChangeListResponse) ProtoMessage() {}

func (x *CommissionChangeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionChangeListResponse.ProtoReflect.Descriptor instead.
func (*CommissionChangeListResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{9}
}

func (x *CommissionChangeListResponse) GetList() []*model.UserCommissionChange {
	if x != nil {
		return x.List
	}
	return nil
}

type CommissionPoolIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User              *model.User      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Level             *model.UserLevel `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	CommissionPoolTip string           `protobuf:"bytes,3,opt,name=commissionPoolTip,proto3" json:"commissionPoolTip,omitempty"`
	TotalAmount       float64          `protobuf:"fixed64,4,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	TeamNums          int64            `protobuf:"varint,5,opt,name=teamNums,proto3" json:"teamNums,omitempty"`
	TeamNumsGrade     int64            `protobuf:"varint,6,opt,name=teamNumsGrade,proto3" json:"teamNumsGrade,omitempty"`
	CollectNum        int64            `protobuf:"varint,7,opt,name=collectNum,proto3" json:"collectNum,omitempty"`
	CanCollect        bool             `protobuf:"varint,8,opt,name=canCollect,proto3" json:"canCollect,omitempty"`
}

func (x *CommissionPoolIndexResponse) Reset() {
	*x = CommissionPoolIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionPoolIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionPoolIndexResponse) ProtoMessage() {}

func (x *CommissionPoolIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionPoolIndexResponse.ProtoReflect.Descriptor instead.
func (*CommissionPoolIndexResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{10}
}

func (x *CommissionPoolIndexResponse) GetUser() *model.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CommissionPoolIndexResponse) GetLevel() *model.UserLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *CommissionPoolIndexResponse) GetCommissionPoolTip() string {
	if x != nil {
		return x.CommissionPoolTip
	}
	return ""
}

func (x *CommissionPoolIndexResponse) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *CommissionPoolIndexResponse) GetTeamNums() int64 {
	if x != nil {
		return x.TeamNums
	}
	return 0
}

func (x *CommissionPoolIndexResponse) GetTeamNumsGrade() int64 {
	if x != nil {
		return x.TeamNumsGrade
	}
	return 0
}

func (x *CommissionPoolIndexResponse) GetCollectNum() int64 {
	if x != nil {
		return x.CollectNum
	}
	return 0
}

func (x *CommissionPoolIndexResponse) GetCanCollect() bool {
	if x != nil {
		return x.CanCollect
	}
	return false
}

type ManagementOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.ManagementOrder `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ManagementOrderListResponse) Reset() {
	*x = ManagementOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagementOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementOrderListResponse) ProtoMessage() {}

func (x *ManagementOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementOrderListResponse.ProtoReflect.Descriptor instead.
func (*ManagementOrderListResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{11}
}

func (x *ManagementOrderListResponse) GetList() []*model.ManagementOrder {
	if x != nil {
		return x.List
	}
	return nil
}

type ManChangeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.ManChange `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ManChangeListResponse) Reset() {
	*x = ManChangeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManChangeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManChangeListResponse) ProtoMessage() {}

func (x *ManChangeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManChangeListResponse.ProtoReflect.Descriptor instead.
func (*ManChangeListResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{12}
}

func (x *ManChangeListResponse) GetList() []*model.ManChange {
	if x != nil {
		return x.List
	}
	return nil
}

type TransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount       float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	FundPassword string  `protobuf:"bytes,2,opt,name=fundPassword,proto3" json:"fundPassword,omitempty"`
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{13}
}

func (x *TransferRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferRequest) GetFundPassword() string {
	if x != nil {
		return x.FundPassword
	}
	return ""
}

type WalletBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usdt                 float64 `protobuf:"fixed64,1,opt,name=usdt,proto3" json:"usdt,omitempty"`
	Money                float64 `protobuf:"fixed64,2,opt,name=money,proto3" json:"money,omitempty"`
	MoneyHourIncomeRatio string  `protobuf:"bytes,3,opt,name=moneyHourIncomeRatio,proto3" json:"moneyHourIncomeRatio,omitempty"`
}

func (x *WalletBalance) Reset() {
	*x = WalletBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalance) ProtoMessage() {}

func (x *WalletBalance) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalance.ProtoReflect.Descriptor instead.
func (*WalletBalance) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{14}
}

func (x *WalletBalance) GetUsdt() float64 {
	if x != nil {
		return x.Usdt
	}
	return 0
}

func (x *WalletBalance) GetMoney() float64 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *WalletBalance) GetMoneyHourIncomeRatio() string {
	if x != nil {
		return x.MoneyHourIncomeRatio
	}
	return ""
}

type ListWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.FinancialWithdraw `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListWithdrawResponse) Reset() {
	*x = ListWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawResponse) ProtoMessage() {}

func (x *ListWithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawResponse.ProtoReflect.Descriptor instead.
func (*ListWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{15}
}

func (x *ListWithdrawResponse) GetList() []*model.FinancialWithdraw {
	if x != nil {
		return x.List
	}
	return nil
}

type WithdrawApplyRquest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Amount       float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	AddressId    int32   `protobuf:"varint,3,opt,name=addressId,proto3" json:"addressId,omitempty"`
	CardId       int32   `protobuf:"varint,4,opt,name=cardId,proto3" json:"cardId,omitempty"`
	FundPassword string  `protobuf:"bytes,5,opt,name=fundPassword,proto3" json:"fundPassword,omitempty"`
}

func (x *WithdrawApplyRquest) Reset() {
	*x = WithdrawApplyRquest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawApplyRquest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawApplyRquest) ProtoMessage() {}

func (x *WithdrawApplyRquest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawApplyRquest.ProtoReflect.Descriptor instead.
func (*WithdrawApplyRquest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{16}
}

func (x *WithdrawApplyRquest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WithdrawApplyRquest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawApplyRquest) GetAddressId() int32 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *WithdrawApplyRquest) GetCardId() int32 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *WithdrawApplyRquest) GetFundPassword() string {
	if x != nil {
		return x.FundPassword
	}
	return ""
}

type WithdrawInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance            float64 `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
	UsdtPrice          float64 `protobuf:"fixed64,2,opt,name=usdtPrice,proto3" json:"usdtPrice,omitempty"`
	OpenWithdrawUsdt   bool    `protobuf:"varint,3,opt,name=openWithdrawUsdt,proto3" json:"openWithdrawUsdt,omitempty"`
	OpenWithdrawMoney  bool    `protobuf:"varint,4,opt,name=openWithdrawMoney,proto3" json:"openWithdrawMoney,omitempty"`
	WithdrawMinNum     string  `protobuf:"bytes,5,opt,name=withdrawMinNum,proto3" json:"withdrawMinNum,omitempty"`
	WithdrawMaxNum     string  `protobuf:"bytes,6,opt,name=withdrawMaxNum,proto3" json:"withdrawMaxNum,omitempty"`
	WithdrawMinCoinNum string  `protobuf:"bytes,7,opt,name=withdrawMinCoinNum,proto3" json:"withdrawMinCoinNum,omitempty"`
	WithdrawMaxCoinNum string  `protobuf:"bytes,8,opt,name=withdrawMaxCoinNum,proto3" json:"withdrawMaxCoinNum,omitempty"`
	WithdrawRuleTip    string  `protobuf:"bytes,9,opt,name=withdrawRuleTip,proto3" json:"withdrawRuleTip,omitempty"`
	FeeRatio           string  `protobuf:"bytes,10,opt,name=feeRatio,proto3" json:"feeRatio,omitempty"`
}

func (x *WithdrawInfoResponse) Reset() {
	*x = WithdrawInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawInfoResponse) ProtoMessage() {}

func (x *WithdrawInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawInfoResponse.ProtoReflect.Descriptor instead.
func (*WithdrawInfoResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{17}
}

func (x *WithdrawInfoResponse) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *WithdrawInfoResponse) GetUsdtPrice() float64 {
	if x != nil {
		return x.UsdtPrice
	}
	return 0
}

func (x *WithdrawInfoResponse) GetOpenWithdrawUsdt() bool {
	if x != nil {
		return x.OpenWithdrawUsdt
	}
	return false
}

func (x *WithdrawInfoResponse) GetOpenWithdrawMoney() bool {
	if x != nil {
		return x.OpenWithdrawMoney
	}
	return false
}

func (x *WithdrawInfoResponse) GetWithdrawMinNum() string {
	if x != nil {
		return x.WithdrawMinNum
	}
	return ""
}

func (x *WithdrawInfoResponse) GetWithdrawMaxNum() string {
	if x != nil {
		return x.WithdrawMaxNum
	}
	return ""
}

func (x *WithdrawInfoResponse) GetWithdrawMinCoinNum() string {
	if x != nil {
		return x.WithdrawMinCoinNum
	}
	return ""
}

func (x *WithdrawInfoResponse) GetWithdrawMaxCoinNum() string {
	if x != nil {
		return x.WithdrawMaxCoinNum
	}
	return ""
}

func (x *WithdrawInfoResponse) GetWithdrawRuleTip() string {
	if x != nil {
		return x.WithdrawRuleTip
	}
	return ""
}

func (x *WithdrawInfoResponse) GetFeeRatio() string {
	if x != nil {
		return x.FeeRatio
	}
	return ""
}

type AddWithdrawAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AddWithdrawAddressRequest) Reset() {
	*x = AddWithdrawAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWithdrawAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWithdrawAddressRequest) ProtoMessage() {}

func (x *AddWithdrawAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWithdrawAddressRequest.ProtoReflect.Descriptor instead.
func (*AddWithdrawAddressRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{18}
}

func (x *AddWithdrawAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddWithdrawAddressRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListCardtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.FinancialCard `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListCardtResponse) Reset() {
	*x = ListCardtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCardtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCardtResponse) ProtoMessage() {}

func (x *ListCardtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCardtResponse.ProtoReflect.Descriptor instead.
func (*ListCardtResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{19}
}

func (x *ListCardtResponse) GetList() []*model.FinancialCard {
	if x != nil {
		return x.List
	}
	return nil
}

type AssetBalanceWithTipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset *model.UserAssets `protobuf:"bytes,1,opt,name=Asset,proto3" json:"Asset,omitempty"`
	Tip   string            `protobuf:"bytes,2,opt,name=tip,proto3" json:"tip,omitempty"`
}

func (x *AssetBalanceWithTipResponse) Reset() {
	*x = AssetBalanceWithTipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetBalanceWithTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetBalanceWithTipResponse) ProtoMessage() {}

func (x *AssetBalanceWithTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetBalanceWithTipResponse.ProtoReflect.Descriptor instead.
func (*AssetBalanceWithTipResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{20}
}

func (x *AssetBalanceWithTipResponse) GetAsset() *model.UserAssets {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *AssetBalanceWithTipResponse) GetTip() string {
	if x != nil {
		return x.Tip
	}
	return ""
}

type MinerOrderListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1正常,2过期
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` //    Pager pager = 1;
}

func (x *MinerOrderListRequest) Reset() {
	*x = MinerOrderListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerOrderListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerOrderListRequest) ProtoMessage() {}

func (x *MinerOrderListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerOrderListRequest.ProtoReflect.Descriptor instead.
func (*MinerOrderListRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{21}
}

func (x *MinerOrderListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type Pager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// same as mysql's offsset; default(0)
	Start int32 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	// same as mysql's limit; default(20)
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Pager) Reset() {
	*x = Pager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pager) ProtoMessage() {}

func (x *Pager) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pager.ProtoReflect.Descriptor instead.
func (*Pager) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{22}
}

func (x *Pager) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Pager) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type MinerOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.MinersOrder `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MinerOrderListResponse) Reset() {
	*x = MinerOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerOrderListResponse) ProtoMessage() {}

func (x *MinerOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerOrderListResponse.ProtoReflect.Descriptor instead.
func (*MinerOrderListResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{23}
}

func (x *MinerOrderListResponse) GetList() []*model.MinersOrder {
	if x != nil {
		return x.List
	}
	return nil
}

type LeaseMinerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num          uint32 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	MinersId     uint32 `protobuf:"varint,2,opt,name=minersId,proto3" json:"minersId,omitempty"`
	FundPassword string `protobuf:"bytes,3,opt,name=fundPassword,proto3" json:"fundPassword,omitempty"`
	ExchangeCode string `protobuf:"bytes,4,opt,name=exchange_code,json=exchangeCode,proto3" json:"exchange_code,omitempty"`
}

func (x *LeaseMinerRequest) Reset() {
	*x = LeaseMinerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseMinerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseMinerRequest) ProtoMessage() {}

func (x *LeaseMinerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseMinerRequest.ProtoReflect.Descriptor instead.
func (*LeaseMinerRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{24}
}

func (x *LeaseMinerRequest) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *LeaseMinerRequest) GetMinersId() uint32 {
	if x != nil {
		return x.MinersId
	}
	return 0
}

func (x *LeaseMinerRequest) GetFundPassword() string {
	if x != nil {
		return x.FundPassword
	}
	return ""
}

func (x *LeaseMinerRequest) GetExchangeCode() string {
	if x != nil {
		return x.ExchangeCode
	}
	return ""
}

type UserInfoLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo         *UserInfo `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	Level            *Level    `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	NextLevel        *Level    `protobuf:"bytes,3,opt,name=nextLevel,proto3" json:"nextLevel,omitempty"`
	NextRefereeNums  uint32    `protobuf:"varint,4,opt,name=nextRefereeNums,proto3" json:"nextRefereeNums,omitempty"`
	RefereeNumsDiff  uint32    `protobuf:"varint,5,opt,name=refereeNumsDiff,proto3" json:"refereeNumsDiff,omitempty"`
	NextTeamNums     uint32    `protobuf:"varint,6,opt,name=nextTeamNums,proto3" json:"nextTeamNums,omitempty"`
	TeamNumsDiff     uint32    `protobuf:"varint,7,opt,name=teamNumsDiff,proto3" json:"teamNumsDiff,omitempty"`
	TeamLeaderMobile string    `protobuf:"bytes,8,opt,name=teamLeaderMobile,proto3" json:"teamLeaderMobile,omitempty"`
	IdentifierHash   string    `protobuf:"bytes,9,opt,name=identifierHash,proto3" json:"identifierHash,omitempty"`
}

func (x *UserInfoLevelResponse) Reset() {
	*x = UserInfoLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoLevelResponse) ProtoMessage() {}

func (x *UserInfoLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoLevelResponse.ProtoReflect.Descriptor instead.
func (*UserInfoLevelResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{25}
}

func (x *UserInfoLevelResponse) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *UserInfoLevelResponse) GetLevel() *Level {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *UserInfoLevelResponse) GetNextLevel() *Level {
	if x != nil {
		return x.NextLevel
	}
	return nil
}

func (x *UserInfoLevelResponse) GetNextRefereeNums() uint32 {
	if x != nil {
		return x.NextRefereeNums
	}
	return 0
}

func (x *UserInfoLevelResponse) GetRefereeNumsDiff() uint32 {
	if x != nil {
		return x.RefereeNumsDiff
	}
	return 0
}

func (x *UserInfoLevelResponse) GetNextTeamNums() uint32 {
	if x != nil {
		return x.NextTeamNums
	}
	return 0
}

func (x *UserInfoLevelResponse) GetTeamNumsDiff() uint32 {
	if x != nil {
		return x.TeamNumsDiff
	}
	return 0
}

func (x *UserInfoLevelResponse) GetTeamLeaderMobile() string {
	if x != nil {
		return x.TeamLeaderMobile
	}
	return ""
}

func (x *UserInfoLevelResponse) GetIdentifierHash() string {
	if x != nil {
		return x.IdentifierHash
	}
	return ""
}

type AddCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankId       uint32 `protobuf:"varint,1,opt,name=bankId,proto3" json:"bankId,omitempty"`
	AccountName  string `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	BankNum      string `protobuf:"bytes,3,opt,name=bankNum,proto3" json:"bankNum,omitempty"`
	FundPassword string `protobuf:"bytes,4,opt,name=fundPassword,proto3" json:"fundPassword,omitempty"`
}

func (x *AddCardRequest) Reset() {
	*x = AddCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardRequest) ProtoMessage() {}

func (x *AddCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardRequest.ProtoReflect.Descriptor instead.
func (*AddCardRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{26}
}

func (x *AddCardRequest) GetBankId() uint32 {
	if x != nil {
		return x.BankId
	}
	return 0
}

func (x *AddCardRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AddCardRequest) GetBankNum() string {
	if x != nil {
		return x.BankNum
	}
	return ""
}

func (x *AddCardRequest) GetFundPassword() string {
	if x != nil {
		return x.FundPassword
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Mobile   string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Avatar   string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// string fund_password = 7;
	RefereeNums  int64  `protobuf:"varint,8,opt,name=referee_nums,json=refereeNums,proto3" json:"referee_nums,omitempty"`
	TeamNums     int64  `protobuf:"varint,9,opt,name=team_nums,json=teamNums,proto3" json:"team_nums,omitempty"`
	Token        string `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
	RefreshToken string `protobuf:"bytes,11,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// userName
	Name        string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	IdCard      string `protobuf:"bytes,13,opt,name=idCard,proto3" json:"idCard,omitempty"`
	IsCertified int64  `protobuf:"varint,14,opt,name=is_certified,json=isCertified,proto3" json:"is_certified,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{27}
}

func (x *UserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetRefereeNums() int64 {
	if x != nil {
		return x.RefereeNums
	}
	return 0
}

func (x *UserInfo) GetTeamNums() int64 {
	if x != nil {
		return x.TeamNums
	}
	return 0
}

func (x *UserInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserInfo) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *UserInfo) GetIsCertified() int64 {
	if x != nil {
		return x.IsCertified
	}
	return 0
}

type Level struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LogoImage string `protobuf:"bytes,3,opt,name=logo_image,json=logoImage,proto3" json:"logo_image,omitempty"`
	Bonus     uint32 `protobuf:"varint,4,opt,name=bonus,proto3" json:"bonus,omitempty"`
	// for next level
	RefereeNum uint32 `protobuf:"varint,5,opt,name=referee_num,json=refereeNum,proto3" json:"referee_num,omitempty"`
	// for next level
	TeamNum uint32 `protobuf:"varint,6,opt,name=team_num,json=teamNum,proto3" json:"team_num,omitempty"`
}

func (x *Level) Reset() {
	*x = Level{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Level) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level) ProtoMessage() {}

func (x *Level) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level.ProtoReflect.Descriptor instead.
func (*Level) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{28}
}

func (x *Level) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Level) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Level) GetLogoImage() string {
	if x != nil {
		return x.LogoImage
	}
	return ""
}

func (x *Level) GetBonus() uint32 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

func (x *Level) GetRefereeNum() uint32 {
	if x != nil {
		return x.RefereeNum
	}
	return 0
}

func (x *Level) GetTeamNum() uint32 {
	if x != nil {
		return x.TeamNum
	}
	return 0
}

type TeamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                  uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	TeamNums                uint32 `protobuf:"varint,2,opt,name=teamNums,proto3" json:"teamNums,omitempty"`
	Mobile                  string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	WalletAddr              string `protobuf:"bytes,4,opt,name=wallet_addr,json=walletAddr,proto3" json:"wallet_addr,omitempty"`
	Money                   string `protobuf:"bytes,5,opt,name=money,proto3" json:"money,omitempty"`
	TotalTeamNums           uint32 `protobuf:"varint,6,opt,name=totalTeamNums,proto3" json:"totalTeamNums,omitempty"`
	TodayContractAmount     uint32 `protobuf:"varint,7,opt,name=todayContractAmount,proto3" json:"todayContractAmount,omitempty"`
	TodayCommission         uint32 `protobuf:"varint,8,opt,name=todayCommission,proto3" json:"todayCommission,omitempty"`
	TodayIncome             uint32 `protobuf:"varint,9,opt,name=todayIncome,proto3" json:"todayIncome,omitempty"`
	TeamContractAmount      uint32 `protobuf:"varint,10,opt,name=teamContractAmount,proto3" json:"teamContractAmount,omitempty"`
	TodayTeamContractAmount uint32 `protobuf:"varint,11,opt,name=todayTeamContractAmount,proto3" json:"todayTeamContractAmount,omitempty"`
	MinersTotalPrice        uint32 `protobuf:"varint,12,opt,name=minersTotalPrice,proto3" json:"minersTotalPrice,omitempty"`
	ManagementTotalPrice    uint32 `protobuf:"varint,13,opt,name=managementTotalPrice,proto3" json:"managementTotalPrice,omitempty"`
}

func (x *TeamData) Reset() {
	*x = TeamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamData) ProtoMessage() {}

func (x *TeamData) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamData.ProtoReflect.Descriptor instead.
func (*TeamData) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{29}
}

func (x *TeamData) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TeamData) GetTeamNums() uint32 {
	if x != nil {
		return x.TeamNums
	}
	return 0
}

func (x *TeamData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *TeamData) GetWalletAddr() string {
	if x != nil {
		return x.WalletAddr
	}
	return ""
}

func (x *TeamData) GetMoney() string {
	if x != nil {
		return x.Money
	}
	return ""
}

func (x *TeamData) GetTotalTeamNums() uint32 {
	if x != nil {
		return x.TotalTeamNums
	}
	return 0
}

func (x *TeamData) GetTodayContractAmount() uint32 {
	if x != nil {
		return x.TodayContractAmount
	}
	return 0
}

func (x *TeamData) GetTodayCommission() uint32 {
	if x != nil {
		return x.TodayCommission
	}
	return 0
}

func (x *TeamData) GetTodayIncome() uint32 {
	if x != nil {
		return x.TodayIncome
	}
	return 0
}

func (x *TeamData) GetTeamContractAmount() uint32 {
	if x != nil {
		return x.TeamContractAmount
	}
	return 0
}

func (x *TeamData) GetTodayTeamContractAmount() uint32 {
	if x != nil {
		return x.TodayTeamContractAmount
	}
	return 0
}

func (x *TeamData) GetMinersTotalPrice() uint32 {
	if x != nil {
		return x.MinersTotalPrice
	}
	return 0
}

func (x *TeamData) GetManagementTotalPrice() uint32 {
	if x != nil {
		return x.ManagementTotalPrice
	}
	return 0
}

type ListWithdrawAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*model.FinancialAddress `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListWithdrawAddressResponse) Reset() {
	*x = ListWithdrawAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithdrawAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawAddressResponse) ProtoMessage() {}

func (x *ListWithdrawAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawAddressResponse.ProtoReflect.Descriptor instead.
func (*ListWithdrawAddressResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{30}
}

func (x *ListWithdrawAddressResponse) GetList() []*model.FinancialAddress {
	if x != nil {
		return x.List
	}
	return nil
}

type LevelInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelList              []*model.UserLevel `protobuf:"bytes,7,rep,name=levelList,proto3" json:"levelList,omitempty"`
	TodayInviteCount       uint32             `protobuf:"varint,1,opt,name=todayInviteCount,proto3" json:"todayInviteCount,omitempty"`
	WeekInviteCount        uint32             `protobuf:"varint,2,opt,name=weekInviteCount,proto3" json:"weekInviteCount,omitempty"`
	MonthInviteCount       uint32             `protobuf:"varint,3,opt,name=monthInviteCount,proto3" json:"monthInviteCount,omitempty"`
	TodayInviteReachedGive []*InviterReachcfg `protobuf:"bytes,4,rep,name=todayInviteReachedGive,proto3" json:"todayInviteReachedGive,omitempty"`
	WeekInviteReachedGive  []*InviterReachcfg `protobuf:"bytes,5,rep,name=weekInviteReachedGive,proto3" json:"weekInviteReachedGive,omitempty"`
	MonthInviteReachedGive []*InviterReachcfg `protobuf:"bytes,6,rep,name=monthInviteReachedGive,proto3" json:"monthInviteReachedGive,omitempty"`
}

func (x *LevelInfoResponse) Reset() {
	*x = LevelInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelInfoResponse) ProtoMessage() {}

func (x *LevelInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelInfoResponse.ProtoReflect.Descriptor instead.
func (*LevelInfoResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{31}
}

func (x *LevelInfoResponse) GetLevelList() []*model.UserLevel {
	if x != nil {
		return x.LevelList
	}
	return nil
}

func (x *LevelInfoResponse) GetTodayInviteCount() uint32 {
	if x != nil {
		return x.TodayInviteCount
	}
	return 0
}

func (x *LevelInfoResponse) GetWeekInviteCount() uint32 {
	if x != nil {
		return x.WeekInviteCount
	}
	return 0
}

func (x *LevelInfoResponse) GetMonthInviteCount() uint32 {
	if x != nil {
		return x.MonthInviteCount
	}
	return 0
}

func (x *LevelInfoResponse) GetTodayInviteReachedGive() []*InviterReachcfg {
	if x != nil {
		return x.TodayInviteReachedGive
	}
	return nil
}

func (x *LevelInfoResponse) GetWeekInviteReachedGive() []*InviterReachcfg {
	if x != nil {
		return x.WeekInviteReachedGive
	}
	return nil
}

func (x *LevelInfoResponse) GetMonthInviteReachedGive() []*InviterReachcfg {
	if x != nil {
		return x.MonthInviteReachedGive
	}
	return nil
}

type InviterReachcfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InviterReachcfg) Reset() {
	*x = InviterReachcfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviterReachcfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviterReachcfg) ProtoMessage() {}

func (x *InviterReachcfg) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviterReachcfg.ProtoReflect.Descriptor instead.
func (*InviterReachcfg) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{32}
}

func (x *InviterReachcfg) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InviterReachcfg) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AssetBalanceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AssetBalance `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AssetBalanceListResponse) Reset() {
	*x = AssetBalanceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetBalanceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetBalanceListResponse) ProtoMessage() {}

func (x *AssetBalanceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetBalanceListResponse.ProtoReflect.Descriptor instead.
func (*AssetBalanceListResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{33}
}

func (x *AssetBalanceListResponse) GetList() []*AssetBalance {
	if x != nil {
		return x.List
	}
	return nil
}

type AssetBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LogoImage string  `protobuf:"bytes,3,opt,name=logo_image,json=logoImage,proto3" json:"logo_image,omitempty"`
	Balance   string  `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance,omitempty"`
	Price     float32 `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *AssetBalance) Reset() {
	*x = AssetBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetBalance) ProtoMessage() {}

func (x *AssetBalance) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetBalance.ProtoReflect.Descriptor instead.
func (*AssetBalance) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{34}
}

func (x *AssetBalance) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetBalance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssetBalance) GetLogoImage() string {
	if x != nil {
		return x.LogoImage
	}
	return ""
}

func (x *AssetBalance) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *AssetBalance) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetVerifyFaceResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertifyId string `protobuf:"bytes,1,opt,name=certify_id,json=certifyId,proto3" json:"certify_id,omitempty"`
}

func (x *GetVerifyFaceResRequest) Reset() {
	*x = GetVerifyFaceResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifyFaceResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifyFaceResRequest) ProtoMessage() {}

func (x *GetVerifyFaceResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifyFaceResRequest.ProtoReflect.Descriptor instead.
func (*GetVerifyFaceResRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{35}
}

func (x *GetVerifyFaceResRequest) GetCertifyId() string {
	if x != nil {
		return x.CertifyId
	}
	return ""
}

type InitVerifyFaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertName  string `protobuf:"bytes,1,opt,name=certName,proto3" json:"certName,omitempty"`
	CertNo    string `protobuf:"bytes,2,opt,name=certNo,proto3" json:"certNo,omitempty"`
	ReturnUrl string `protobuf:"bytes,3,opt,name=returnUrl,proto3" json:"returnUrl,omitempty"`
	MetaInfo  string `protobuf:"bytes,4,opt,name=metaInfo,proto3" json:"metaInfo,omitempty"`
}

func (x *InitVerifyFaceRequest) Reset() {
	*x = InitVerifyFaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitVerifyFaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitVerifyFaceRequest) ProtoMessage() {}

func (x *InitVerifyFaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitVerifyFaceRequest.ProtoReflect.Descriptor instead.
func (*InitVerifyFaceRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{36}
}

func (x *InitVerifyFaceRequest) GetCertName() string {
	if x != nil {
		return x.CertName
	}
	return ""
}

func (x *InitVerifyFaceRequest) GetCertNo() string {
	if x != nil {
		return x.CertNo
	}
	return ""
}

func (x *InitVerifyFaceRequest) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *InitVerifyFaceRequest) GetMetaInfo() string {
	if x != nil {
		return x.MetaInfo
	}
	return ""
}

type UpdatePwdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPassword string `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *UpdatePwdRequest) Reset() {
	*x = UpdatePwdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePwdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePwdRequest) ProtoMessage() {}

func (x *UpdatePwdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePwdRequest.ProtoReflect.Descriptor instead.
func (*UpdatePwdRequest) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{37}
}

func (x *UpdatePwdRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UpdatePwdRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type UpdatePwdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePwdResponse) Reset() {
	*x = UpdatePwdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mproto_user_man_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePwdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePwdResponse) ProtoMessage() {}

func (x *UpdatePwdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mproto_user_man_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePwdResponse.ProtoReflect.Descriptor instead.
func (*UpdatePwdResponse) Descriptor() ([]byte, []int) {
	return file_mproto_user_man_proto_rawDescGZIP(), []int{38}
}

var File_mproto_user_man_proto protoreflect.FileDescriptor

var file_mproto_user_man_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62, 0x6f, 0x64, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a,
	0x15, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x44,
	0x0a, 0x14, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x50, 0x61,
	0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x69, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x54, 0x69, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0a, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x22, 0x4a,
	0x0a, 0x12, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x55, 0x0a, 0x0d, 0x42, 0x75,
	0x79, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x22, 0x0a,
	0x0c, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x4f, 0x0a, 0x1e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x3b, 0x0a, 0x14, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x4f, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xb8, 0x02, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d,
	0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65,
	0x61, 0x6d, 0x4e, 0x75, 0x6d, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x49, 0x0a, 0x1b, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x15, 0x4d, 0x61, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x6d, 0x0a, 0x0d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x64, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x75, 0x73, 0x64, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x32, 0x0a, 0x14, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x22, 0x44, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x9e, 0x03, 0x0a, 0x14, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73,
	0x64, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75,
	0x73, 0x64, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x55, 0x73, 0x64, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x55, 0x73, 0x64, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x69,
	0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x4d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x78, 0x4e,
	0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x69,
	0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61,
	0x78, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x75,
	0x6c, 0x65, 0x54, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x22, 0x49, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x58, 0x0a, 0x1b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x70, 0x22, 0x2f, 0x0a, 0x15,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a,
	0x05, 0x50, 0x61, 0x67, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x40, 0x0a, 0x16, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x87, 0x03, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2b,
	0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x65, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x65,
	0x4e, 0x75, 0x6d, 0x73, 0x44, 0x69, 0x66, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x44, 0x69, 0x66, 0x66, 0x12,
	0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4e,
	0x75, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d, 0x73, 0x44,
	0x69, 0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x4e,
	0x75, 0x6d, 0x73, 0x44, 0x69, 0x66, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x65, 0x61, 0x6d, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x74, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x22, 0x88, 0x01, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6b,
	0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x4e,
	0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xe2, 0x02, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x65,
	0x4e, 0x75, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x75, 0x6d,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x69, 0x73, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67,
	0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x6f, 0x67, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d, 0x22, 0xfb, 0x03, 0x0a, 0x08, 0x54,
	0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x74,
	0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x65, 0x61, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x17, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x17, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xb6, 0x03, 0x0a, 0x11, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x65, 0x65, 0x6b, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x77, 0x65, 0x65, 0x6b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x16,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x47, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61,
	0x63, 0x68, 0x63, 0x66, 0x67, 0x52, 0x16, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x47, 0x69, 0x76, 0x65, 0x12, 0x4d, 0x0a,
	0x15, 0x77, 0x65, 0x65, 0x6b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x47, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61,
	0x63, 0x68, 0x63, 0x66, 0x67, 0x52, 0x15, 0x77, 0x65, 0x65, 0x6b, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x47, 0x69, 0x76, 0x65, 0x12, 0x4f, 0x0a, 0x16,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x47, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61,
	0x63, 0x68, 0x63, 0x66, 0x67, 0x52, 0x16, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x47, 0x69, 0x76, 0x65, 0x22, 0x39, 0x0a,
	0x0f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x68, 0x63, 0x66, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x18, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x81,
	0x01, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a,
	0x15, 0x49, 0x6e, 0x69, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x77,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x13,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xc1, 0x11, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x77, 0x64, 0x12, 0x18, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x77, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x49, 0x6e,
	0x69, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64,
	0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x00,
	0x12, 0x3b, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x13, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x10, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d,
	0x73, 0x67, 0x1a, 0x20, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d,
	0x73, 0x67, 0x1a, 0x19, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0f,
	0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x1a,
	0x1d, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x6d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x2e, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x12, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x50,
	0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x1a, 0x22, 0x2e,
	0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x4d, 0x73, 0x67, 0x1a, 0x1c, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0f,
	0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x1a,
	0x23, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x4d, 0x73, 0x67, 0x1a, 0x19, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73,
	0x67, 0x1a, 0x1c, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x70, 0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x23, 0x2e, 0x6d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x12, 0x1b, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x13, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1c, 0x2e, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x4c, 0x65,
	0x61, 0x73, 0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x0c, 0x43, 0x4d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x2e,
	0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x1a, 0x15,
	0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x4d, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x12, 0x17, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c, 0x43, 0x4d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x12, 0x17, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x1a, 0x1d, 0x2e, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x13, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x4d, 0x73, 0x67, 0x1a, 0x23, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x14, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x4d, 0x73, 0x67, 0x1a, 0x24, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x11, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73,
	0x67, 0x1a, 0x13, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x4c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x1a, 0x1c, 0x2e, 0x6d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x13, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x0f, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73,
	0x67, 0x1a, 0x23, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x42, 0x75, 0x79, 0x4d,
	0x61, 0x6e, 0x12, 0x15, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x4d,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x1a, 0x2e, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x26, 0x2e,
	0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x6c, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x18, 0x6d, 0x75, 0x73, 0x6b, 0x65, 0x78, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xa2,
	0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x4d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xca, 0x02,
	0x06, 0x4d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xe2, 0x02, 0x12, 0x4d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x4d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mproto_user_man_proto_rawDescOnce sync.Once
	file_mproto_user_man_proto_rawDescData = file_mproto_user_man_proto_rawDesc
)

func file_mproto_user_man_proto_rawDescGZIP() []byte {
	file_mproto_user_man_proto_rawDescOnce.Do(func() {
		file_mproto_user_man_proto_rawDescData = protoimpl.X.CompressGZIP(file_mproto_user_man_proto_rawDescData)
	})
	return file_mproto_user_man_proto_rawDescData
}

var file_mproto_user_man_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_mproto_user_man_proto_goTypes = []any{
	(*SubmitRechargeResponse)(nil),         // 0: mproto.SubmitRechargeResponse
	(*SubmitRechargeRequest)(nil),          // 1: mproto.SubmitRechargeRequest
	(*RechargeListResponse)(nil),           // 2: mproto.RechargeListResponse
	(*QuickPayMethodListResponse)(nil),     // 3: mproto.QuickPayMethodListResponse
	(*IdCardInfo)(nil),                     // 4: mproto.IdCardInfo
	(*BuyContractRequest)(nil),             // 5: mproto.BuyContractRequest
	(*BuyManRequest)(nil),                  // 6: mproto.BuyManRequest
	(*TradeContractOrderListResponse)(nil), // 7: mproto.TradeContractOrderListResponse
	(*LecturerListResponse)(nil),           // 8: mproto.LecturerListResponse
	(*CommissionChangeListResponse)(nil),   // 9: mproto.CommissionChangeListResponse
	(*CommissionPoolIndexResponse)(nil),    // 10: mproto.CommissionPoolIndexResponse
	(*ManagementOrderListResponse)(nil),    // 11: mproto.ManagementOrderListResponse
	(*ManChangeListResponse)(nil),          // 12: mproto.ManChangeListResponse
	(*TransferRequest)(nil),                // 13: mproto.TransferRequest
	(*WalletBalance)(nil),                  // 14: mproto.WalletBalance
	(*ListWithdrawResponse)(nil),           // 15: mproto.listWithdrawResponse
	(*WithdrawApplyRquest)(nil),            // 16: mproto.WithdrawApplyRquest
	(*WithdrawInfoResponse)(nil),           // 17: mproto.WithdrawInfoResponse
	(*AddWithdrawAddressRequest)(nil),      // 18: mproto.AddWithdrawAddressRequest
	(*ListCardtResponse)(nil),              // 19: mproto.ListCardtResponse
	(*AssetBalanceWithTipResponse)(nil),    // 20: mproto.AssetBalanceWithTipResponse
	(*MinerOrderListRequest)(nil),          // 21: mproto.MinerOrderListRequest
	(*Pager)(nil),                          // 22: mproto.Pager
	(*MinerOrderListResponse)(nil),         // 23: mproto.MinerOrderListResponse
	(*LeaseMinerRequest)(nil),              // 24: mproto.LeaseMinerRequest
	(*UserInfoLevelResponse)(nil),          // 25: mproto.UserInfoLevelResponse
	(*AddCardRequest)(nil),                 // 26: mproto.AddCardRequest
	(*UserInfo)(nil),                       // 27: mproto.UserInfo
	(*Level)(nil),                          // 28: mproto.Level
	(*TeamData)(nil),                       // 29: mproto.TeamData
	(*ListWithdrawAddressResponse)(nil),    // 30: mproto.ListWithdrawAddressResponse
	(*LevelInfoResponse)(nil),              // 31: mproto.LevelInfoResponse
	(*InviterReachcfg)(nil),                // 32: mproto.InviterReachcfg
	(*AssetBalanceListResponse)(nil),       // 33: mproto.AssetBalanceListResponse
	(*AssetBalance)(nil),                   // 34: mproto.AssetBalance
	(*GetVerifyFaceResRequest)(nil),        // 35: mproto.GetVerifyFaceResRequest
	(*InitVerifyFaceRequest)(nil),          // 36: mproto.InitVerifyFaceRequest
	(*UpdatePwdRequest)(nil),               // 37: mproto.UpdatePwdRequest
	(*UpdatePwdResponse)(nil),              // 38: mproto.UpdatePwdResponse
	(*model.FinancialRecharge)(nil),        // 39: model.FinancialRecharge
	(*model.FinancialPaymentMethod)(nil),   // 40: model.FinancialPaymentMethod
	(*model.TradeContractOrder)(nil),       // 41: model.TradeContractOrder
	(*model.Lecturer)(nil),                 // 42: model.Lecturer
	(*model.UserCommissionChange)(nil),     // 43: model.UserCommissionChange
	(*model.User)(nil),                     // 44: model.User
	(*model.UserLevel)(nil),                // 45: model.UserLevel
	(*model.ManagementOrder)(nil),          // 46: model.ManagementOrder
	(*model.ManChange)(nil),                // 47: model.ManChange
	(*model.FinancialWithdraw)(nil),        // 48: model.FinancialWithdraw
	(*model.FinancialCard)(nil),            // 49: model.FinancialCard
	(*model.UserAssets)(nil),               // 50: model.UserAssets
	(*model.MinersOrder)(nil),              // 51: model.MinersOrder
	(*model.FinancialAddress)(nil),         // 52: model.FinancialAddress
	(*NullMsg)(nil),                        // 53: mproto.NullMsg
	(*IdParam)(nil),                        // 54: mproto.IdParam
	(*StringParam)(nil),                    // 55: mproto.StringParam
	(*httpbody.HttpBody)(nil),              // 56: google.api.HttpBody
	(*MsgResponse)(nil),                    // 57: mproto.MsgResponse
}
var file_mproto_user_man_proto_depIdxs = []int32{
	39, // 0: mproto.RechargeListResponse.list:type_name -> model.FinancialRecharge
	40, // 1: mproto.QuickPayMethodListResponse.MethodList:type_name -> model.FinancialPaymentMethod
	41, // 2: mproto.TradeContractOrderListResponse.list:type_name -> model.TradeContractOrder
	42, // 3: mproto.LecturerListResponse.list:type_name -> model.Lecturer
	43, // 4: mproto.CommissionChangeListResponse.list:type_name -> model.UserCommissionChange
	44, // 5: mproto.CommissionPoolIndexResponse.user:type_name -> model.User
	45, // 6: mproto.CommissionPoolIndexResponse.level:type_name -> model.UserLevel
	46, // 7: mproto.ManagementOrderListResponse.list:type_name -> model.ManagementOrder
	47, // 8: mproto.ManChangeListResponse.list:type_name -> model.ManChange
	48, // 9: mproto.listWithdrawResponse.list:type_name -> model.FinancialWithdraw
	49, // 10: mproto.ListCardtResponse.list:type_name -> model.FinancialCard
	50, // 11: mproto.AssetBalanceWithTipResponse.Asset:type_name -> model.UserAssets
	51, // 12: mproto.MinerOrderListResponse.list:type_name -> model.MinersOrder
	27, // 13: mproto.UserInfoLevelResponse.userInfo:type_name -> mproto.UserInfo
	28, // 14: mproto.UserInfoLevelResponse.level:type_name -> mproto.Level
	28, // 15: mproto.UserInfoLevelResponse.nextLevel:type_name -> mproto.Level
	52, // 16: mproto.ListWithdrawAddressResponse.list:type_name -> model.FinancialAddress
	45, // 17: mproto.LevelInfoResponse.levelList:type_name -> model.UserLevel
	32, // 18: mproto.LevelInfoResponse.todayInviteReachedGive:type_name -> mproto.InviterReachcfg
	32, // 19: mproto.LevelInfoResponse.weekInviteReachedGive:type_name -> mproto.InviterReachcfg
	32, // 20: mproto.LevelInfoResponse.monthInviteReachedGive:type_name -> mproto.InviterReachcfg
	34, // 21: mproto.AssetBalanceListResponse.list:type_name -> mproto.AssetBalance
	37, // 22: mproto.UserManService.UpdatePwd:input_type -> mproto.UpdatePwdRequest
	36, // 23: mproto.UserManService.InitVerifyFace:input_type -> mproto.InitVerifyFaceRequest
	35, // 24: mproto.UserManService.GetVerifyFaceRes:input_type -> mproto.GetVerifyFaceResRequest
	4,  // 25: mproto.UserManService.SaveIdCardInfo:input_type -> mproto.IdCardInfo
	53, // 26: mproto.UserManService.AssetBalanceList:input_type -> mproto.NullMsg
	53, // 27: mproto.UserManService.LevelInfo:input_type -> mproto.NullMsg
	53, // 28: mproto.UserManService.UserInfoLevel:input_type -> mproto.NullMsg
	26, // 29: mproto.UserManService.AddCard:input_type -> mproto.AddCardRequest
	18, // 30: mproto.UserManService.AddWithdrawAddress:input_type -> mproto.AddWithdrawAddressRequest
	53, // 31: mproto.UserManService.QuickPayMethodList:input_type -> mproto.NullMsg
	53, // 32: mproto.UserManService.RechargeList:input_type -> mproto.NullMsg
	1,  // 33: mproto.UserManService.SubmitRecharge:input_type -> mproto.SubmitRechargeRequest
	53, // 34: mproto.UserManService.ListWithdrawAddress:input_type -> mproto.NullMsg
	53, // 35: mproto.UserManService.ListCard:input_type -> mproto.NullMsg
	53, // 36: mproto.UserManService.WithdrawInfo:input_type -> mproto.NullMsg
	54, // 37: mproto.UserManService.AssetBalanceWithTip:input_type -> mproto.IdParam
	16, // 38: mproto.UserManService.WithdrawApply:input_type -> mproto.WithdrawApplyRquest
	55, // 39: mproto.UserManService.ListWithdraw:input_type -> mproto.StringParam
	24, // 40: mproto.UserManService.LeaseMiner:input_type -> mproto.LeaseMinerRequest
	21, // 41: mproto.UserManService.MinerOrderList:input_type -> mproto.MinerOrderListRequest
	53, // 42: mproto.UserManService.CMWalletInfo:input_type -> mproto.NullMsg
	13, // 43: mproto.UserManService.CMTransferOut:input_type -> mproto.TransferRequest
	13, // 44: mproto.UserManService.CMTransferIn:input_type -> mproto.TransferRequest
	53, // 45: mproto.UserManService.ManChangeList:input_type -> mproto.NullMsg
	53, // 46: mproto.UserManService.CommissionPoolIndex:input_type -> mproto.NullMsg
	53, // 47: mproto.UserManService.CommissionChangeList:input_type -> mproto.NullMsg
	53, // 48: mproto.UserManService.CommissionCollect:input_type -> mproto.NullMsg
	53, // 49: mproto.UserManService.LecturerList:input_type -> mproto.NullMsg
	53, // 50: mproto.UserManService.ManagementOrderList:input_type -> mproto.NullMsg
	6,  // 51: mproto.UserManService.BuyMan:input_type -> mproto.BuyManRequest
	5,  // 52: mproto.UserManService.BuyContract:input_type -> mproto.BuyContractRequest
	54, // 53: mproto.UserManService.TradeContractOrderList:input_type -> mproto.IdParam
	38, // 54: mproto.UserManService.UpdatePwd:output_type -> mproto.UpdatePwdResponse
	56, // 55: mproto.UserManService.InitVerifyFace:output_type -> google.api.HttpBody
	56, // 56: mproto.UserManService.GetVerifyFaceRes:output_type -> google.api.HttpBody
	57, // 57: mproto.UserManService.SaveIdCardInfo:output_type -> mproto.MsgResponse
	33, // 58: mproto.UserManService.AssetBalanceList:output_type -> mproto.AssetBalanceListResponse
	31, // 59: mproto.UserManService.LevelInfo:output_type -> mproto.LevelInfoResponse
	25, // 60: mproto.UserManService.UserInfoLevel:output_type -> mproto.UserInfoLevelResponse
	53, // 61: mproto.UserManService.AddCard:output_type -> mproto.NullMsg
	57, // 62: mproto.UserManService.AddWithdrawAddress:output_type -> mproto.MsgResponse
	3,  // 63: mproto.UserManService.QuickPayMethodList:output_type -> mproto.QuickPayMethodListResponse
	2,  // 64: mproto.UserManService.RechargeList:output_type -> mproto.RechargeListResponse
	0,  // 65: mproto.UserManService.SubmitRecharge:output_type -> mproto.SubmitRechargeResponse
	30, // 66: mproto.UserManService.ListWithdrawAddress:output_type -> mproto.ListWithdrawAddressResponse
	19, // 67: mproto.UserManService.ListCard:output_type -> mproto.ListCardtResponse
	17, // 68: mproto.UserManService.WithdrawInfo:output_type -> mproto.WithdrawInfoResponse
	20, // 69: mproto.UserManService.AssetBalanceWithTip:output_type -> mproto.AssetBalanceWithTipResponse
	57, // 70: mproto.UserManService.WithdrawApply:output_type -> mproto.MsgResponse
	15, // 71: mproto.UserManService.ListWithdraw:output_type -> mproto.listWithdrawResponse
	57, // 72: mproto.UserManService.LeaseMiner:output_type -> mproto.MsgResponse
	23, // 73: mproto.UserManService.MinerOrderList:output_type -> mproto.MinerOrderListResponse
	14, // 74: mproto.UserManService.CMWalletInfo:output_type -> mproto.WalletBalance
	57, // 75: mproto.UserManService.CMTransferOut:output_type -> mproto.MsgResponse
	57, // 76: mproto.UserManService.CMTransferIn:output_type -> mproto.MsgResponse
	12, // 77: mproto.UserManService.ManChangeList:output_type -> mproto.ManChangeListResponse
	10, // 78: mproto.UserManService.CommissionPoolIndex:output_type -> mproto.CommissionPoolIndexResponse
	9,  // 79: mproto.UserManService.CommissionChangeList:output_type -> mproto.CommissionChangeListResponse
	57, // 80: mproto.UserManService.CommissionCollect:output_type -> mproto.MsgResponse
	8,  // 81: mproto.UserManService.LecturerList:output_type -> mproto.LecturerListResponse
	11, // 82: mproto.UserManService.ManagementOrderList:output_type -> mproto.ManagementOrderListResponse
	57, // 83: mproto.UserManService.BuyMan:output_type -> mproto.MsgResponse
	57, // 84: mproto.UserManService.BuyContract:output_type -> mproto.MsgResponse
	7,  // 85: mproto.UserManService.TradeContractOrderList:output_type -> mproto.TradeContractOrderListResponse
	54, // [54:86] is the sub-list for method output_type
	22, // [22:54] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_mproto_user_man_proto_init() }
func file_mproto_user_man_proto_init() {
	if File_mproto_user_man_proto != nil {
		return
	}
	file_mproto_pub_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mproto_user_man_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitRechargeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitRechargeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RechargeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*QuickPayMethodListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*IdCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BuyContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*BuyManRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TradeContractOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*LecturerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionChangeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionPoolIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ManagementOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ManChangeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*WalletBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ListWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawApplyRquest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*AddWithdrawAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ListCardtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*AssetBalanceWithTipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*MinerOrderListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Pager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*MinerOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*LeaseMinerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*UserInfoLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*AddCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*Level); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*TeamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ListWithdrawAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*LevelInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*InviterReachcfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*AssetBalanceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*AssetBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetVerifyFaceResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*InitVerifyFaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePwdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mproto_user_man_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePwdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mproto_user_man_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mproto_user_man_proto_goTypes,
		DependencyIndexes: file_mproto_user_man_proto_depIdxs,
		MessageInfos:      file_mproto_user_man_proto_msgTypes,
	}.Build()
	File_mproto_user_man_proto = out.File
	file_mproto_user_man_proto_rawDesc = nil
	file_mproto_user_man_proto_goTypes = nil
	file_mproto_user_man_proto_depIdxs = nil
}
